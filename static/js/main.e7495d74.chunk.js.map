{"version":3,"sources":["api/api.ts","constants/data.ts","components/UserItem/UserItem.tsx","components/ShowOption/ShowOption.tsx","components/Users/Users.tsx","components/Header/Header.tsx","components/ExpertsSelect/ExpertsSelect.tsx","components/MainNav/MainNav.tsx","components/Navigation/Navigation.tsx","components/Modal/Modal.tsx","components/FilterParams/FilterParams.tsx","components/SelectTimeInterval/SelectTimeInterval.tsx","components/Filter/Filter.tsx","index.tsx","App.tsx","constants/constants.ts"],"names":["getData","url","a","fetch","response","ok","Error","statusText","json","catch","error","allTime","Date","moment","unix","toString","yesterday","add","startOf","lastWeek","lastThirtyDays","thisMonth","lastDayLastMonth","endOf","lastMonth","now","users","userId","name","email","block","signInDate","lastActivity","lastAction","product","ru","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","dateFormat","weekHeader","UserItem","user","getUserId","className","action","id","type","htmlFor","getMonth","getDate","getFullYear","width","height","viewBox","fill","xmlns","d","onClick","ShowOption","getShowAmount","defaultValue","onChange","e","value","currentTarget","Number","Users","isFiltered","length","map","key","Header","href","ExpertsSelect","disabled","MainNav","Navigation","Modal","children","FilterParams","dates","format","SelectTimeInterval","lastOption","getOption","options","useState","activeOption","setActiveOption","handleClick","opt","innerText","classNames","select__btn","Filter","onFilter","startDate","setStartDate","endDate","setEndDate","filterBy","setFilterBy","openFilter","setOpenFilter","open","setOpen","option","setOption","isDisabled","setIsDisabled","setDataOption","undefined","setDataInterval","str","filterOption","setFilterOption","dateTemplate","date","day","month","year","inline","locale","selectionMode","event","ReactDOM","render","usersFromServer","setUsersFromServer","isLoading","setIsLoading","setError","visibleUsers","setVisibleUsers","setIsFiltered","useEffect","then","userList","errorMass","finally","field","start","end","filter","setFilteredUsers","idx","document","getElementById"],"mappings":"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","file":"static/js/main.e7495d74.chunk.js","sourcesContent":["\nexport const getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response.json()\n    .catch(error => error);\n};\n","import moment from 'moment';\n\nexport const allTime = new Date(moment.unix(0).toString());\nexport const yesterday = moment().add(-1, 'day').startOf('day').toString();\nexport const lastWeek = moment().add(-7, 'day').startOf('day').toString();\nexport const lastThirtyDays = moment().add(-30, 'day').startOf('day').toString();\nexport const thisMonth = moment().startOf('month').toString();\nexport const lastDayLastMonth = moment().add(-1, 'month').endOf('month').toString();\nexport const lastMonth = moment().add(-1, 'month').startOf('month').toString();\nexport const now = new Date(moment().endOf('day').toString());\n\nexport const users: User[] = [\n  {\n    userId: 1,\n    name: 'User1',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/1/2020',\n    lastActivity: '03/21/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 2,\n    name: 'User2',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/01/2020',\n    lastActivity: '02/11/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 3,\n    name: 'User3',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/03/2020',\n    lastActivity: '03/01/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 4,\n    name: 'User4',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/02/2020',\n    lastActivity: '03/18/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 6,\n    name: 'User6',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/01/2020',\n    lastActivity: '03/05/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 5,\n    name: 'User5',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/02/2020',\n    lastActivity: '02/20/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 7,\n    name: 'User7',\n    email: 'user@user.com',\n    block: true,\n    signInDate: '1/03/2020',\n    lastActivity: '03/03/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 8,\n    name: 'User8',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/02/2020',\n    lastActivity: '02/26/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 9,\n    name: 'User9',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '03/03/2020',\n    lastActivity: '03/21/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 10,\n    name: 'User10',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '02/02/2020',\n    lastActivity: '02/20/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 11,\n    name: 'User11',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '03/01/2020',\n    lastActivity: '03/21/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 12,\n    name: 'User12',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/01/2020',\n    lastActivity: '01/06/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 13,\n    name: 'User13',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '03/01/2020',\n    lastActivity: '03/01/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 14,\n    name: 'User14',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '02/01/2020',\n    lastActivity: '03/01/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 15,\n    name: 'User15',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/01/2020',\n    lastActivity: '01/21/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n  {\n    userId: 16,\n    name: 'User16',\n    email: 'user@user.com',\n    block: false,\n    signInDate: '1/02/2020',\n    lastActivity: '03/02/2020',\n    lastAction: 'view_landing_course1',\n    product: 'Как наладить отнош',\n  },\n];\n\nexport const ru: Ru = {\n  firstDayOfWeek: 1,\n  dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n  dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n  dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n  monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n  monthNamesShort: ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n  today: 'Hoy',\n  clear: 'Limpiar',\n  dateFormat: 'dd/mm/yy',\n  weekHeader: 'Sm',\n};\n","/* eslint-disable */\nimport React, { FC } from 'react';\nimport { ru } from '../../constants/data';\n\nimport './UserItem.scss';\n\ninterface Props {\n  user: User;\n  getUserId: (id: number) => void;\n}\n\nexport const UserItem: FC<Props> = ({ user, getUserId }) => {\n  const {\n    name,\n    lastActivity,\n    signInDate,\n    lastAction,\n    product,\n    email,\n  } = user;\n\n  const handleDelete = (id: number) => {\n    getUserId(id);\n  };\n\n  return (\n    <tr className=\"users__item\">\n      <td className=\"users__checkbox-wrapper\">\n        <form action=\"#\">\n          <input className=\"users__checkbox\" id={name} type=\"checkbox\" />\n          <label htmlFor={name} className=\"users__label\" />\n        </form>\n      </td>\n      <td className=\"users__cel\">\n        <span className=\"users__name\">\n          {user.block && <span className=\"users__block\" />}\n          {name}\n        </span>\n        <span className=\"users__email\">{email}</span>\n      </td>\n      <td className=\"users__cel\">\n        <span>\n          {`${ru.monthNames[new Date(signInDate).getMonth()]} ${new Date(signInDate).getDate()}, ${new Date(signInDate).getFullYear()}`}\n        </span>\n      </td>\n      <td className=\"users__cel\">\n        <span>\n          {`${ru.monthNames[new Date(lastActivity).getMonth()]} ${new Date(lastActivity).getDate()}, ${new Date(lastActivity).getFullYear()}`}\n        </span>\n      </td>\n      <td className=\"users__cel\">\n        <span>{lastAction}</span>\n      </td>\n      <td className=\"users__cel\">\n        <span>{product}</span>\n      </td>\n      <td className=\"users__btn-wrapper\">\n        <button type=\"button\" className=\"users__btn\">\n          <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1 22.2C0.7 22.2 0.500003 22.1 0.300003 21.9C0.100003 21.7 0 21.4 0 21.1L0.300003 16C0.300003 15.8 0.399991 15.5 0.599991 15.4L15.7 0.299988C15.9 0.0999878 16.1 0 16.4 0C16.7 0 16.9 0.0999878 17.1 0.299988L21.9 5.10004C22.1 5.30004 22.2 5.49999 22.2 5.79999C22.2 6.09999 22.1 6.3 21.9 6.5L6.8 21.6C6.6 21.8 6.4 21.9 6.2 21.9L1 22.2ZM2.2 16.5L2 20.1L5.59999 19.9L19.8 5.70001L16.4 2.29999L2.2 16.5Z\" fill=\"black\" />\n            <path d=\"M18.5 8.90004C18.2 8.90004 18 8.80005 17.8 8.60005L13.5 4.3C13.1 3.9 13.1 3.30004 13.5 2.90004C13.9 2.50004 14.4999 2.50004 14.8999 2.90004L19.1999 7.20002C19.5999 7.60002 19.5999 8.20005 19.1999 8.60005C18.9999 8.80005 18.7 8.90004 18.5 8.90004Z\" fill=\"black\" />\n            <path d=\"M1.5 18.7C1.4 18.7 1.4 18.7 1.3 18.7C1.2 18.7 1.19999 18.7 1.09999 18.7L1 21.2L3.39999 21.1C3.39999 21 3.4 20.9 3.5 20.8C3.5 19.6 2.7 18.7 1.5 18.7Z\" fill=\"black\" />\n          </svg>\n        </button>\n      </td>\n      <td className=\"users__btn-wrapper\">\n        <button\n          type=\"button\"\n          className=\"users__btn\"\n          onClick={() => handleDelete(user.userId)}\n        >\n          <svg width=\"23\" height=\"24\" viewBox=\"0 0 23 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M21.8 4.70001H1C0.4 4.70001 0 4.30001 0 3.70001C0 3.10001 0.4 2.70001 1 2.70001H21.8C22.4 2.70001 22.8 3.10001 22.8 3.70001C22.8 4.30001 22.3 4.70001 21.8 4.70001Z\" fill=\"black\" />\n            <path d=\"M14.0001 4.09998C13.8001 2.89998 12.7 2 11.4 2C10.2 2 9.10005 2.89998 8.80005 4.09998L6.80005 3.70001C7.20005 1.60001 9.10005 0 11.3 0C13.5 0 15.4 1.60001 15.8 3.70001L14.0001 4.09998Z\" fill=\"black\" />\n            <path d=\"M4.6001 24C3.6001 24 2.7001 23.1 2.6001 22.1L1.6001 4.79998C1.6001 4.19998 2.00012 3.80001 2.50012 3.70001C3.10012 3.70001 3.5001 4.09997 3.6001 4.59997L4.6001 21.9L18.1001 22L19.1001 4.59997C19.1001 3.99997 19.6001 3.60001 20.2001 3.70001C20.8001 3.70001 21.2001 4.19998 21.1001 4.79998L20.1001 22.1C20.0001 23.2 19.2001 24 18.1001 24H4.6001Z\" fill=\"black\" />\n            <path d=\"M7.59991 23.9155C7.09991 23.9155 6.59991 23.5155 6.59991 23.0155L5.8999 11.1155C5.8999 10.5155 6.29993 10.1155 6.79993 10.0155C7.29993 10.0155 7.7999 10.4155 7.8999 10.9155L8.59991 22.8156C8.59991 23.4156 8.19991 23.9155 7.59991 23.9155Z\" fill=\"black\" />\n            <path d=\"M15.2 23.9152C15.2 23.9152 15.1 23.9152 15.2 23.9152C14.6 23.9152 14.2 23.4152 14.2 22.8152L14.9 10.9152C14.9 10.3152 15.4 9.91519 16 10.0152C16.6 10.0152 17 10.5152 16.9 11.1152L16.2 23.0152C16.1 23.5152 15.7 23.9152 15.2 23.9152Z\" fill=\"black\" />\n            <path d=\"M11.3999 20.3C10.7999 20.3 10.3999 19.9 10.3999 19.3V7.39996C10.3999 6.79996 10.7999 6.39996 11.3999 6.39996C11.9999 6.39996 12.3999 6.79996 12.3999 7.39996V19.3C12.3999 19.9 11.8999 20.3 11.3999 20.3Z\" fill=\"black\" />\n          </svg>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\n\nimport './ShowOption.scss';\n\ninterface Props {\n  getShowAmount: (value: number) => void;\n}\n\nexport const ShowOption: FC<Props> = ({ getShowAmount }) => {\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.currentTarget;\n\n    getShowAmount(Number(value));\n  };\n\n  return (\n    <form action=\"#\" className=\"show-option\">\n      <select className=\"show-option__select\" name=\"showOption\" defaultValue=\"Отобразить 15\" id=\"showOption\" onChange={handleChange}>\n        <option value=\"5\">Отобразить 5</option>\n        <option value=\"10\">Отобразить 10</option>\n        <option value=\"15\">Отобразить 15</option>\n        <option value=\"20\">Отобразить 20</option>\n      </select>\n    </form>\n  );\n};\n","/* eslint-disable */\nimport React, { FC } from 'react';\nimport { UserItem } from '../UserItem';\nimport { ShowOption } from '../ShowOption';\n\nimport './Users.scss';\n\ninterface Props {\n  users: User[];\n  getShowAmount: (value: number) => void;\n  isFiltered: boolean;\n  getUserId: (id: number) => void;\n}\n\nexport const Users: FC<Props> = ({\n  users, getUserId, getShowAmount, isFiltered,\n}) => {\n  return (\n    <table className=\"users\">\n      <thead className=\"users__head\">\n        <tr className=\"users__item\">\n          <th className=\"users__checkbox-wrapper\">\n            <form action=\"#\">\n              <input className=\"users__checkbox\" id=\"selectAll\" type=\"checkbox\" />\n              <label htmlFor=\"selectAll\" className=\"users__label\" />\n            </form>\n          </th>\n          <th className=\"users__cel\">\n            <span>Пользователь</span>\n          </th>\n          <th className=\"users__cel\">\n            <span>Дата регистрации</span>\n          </th>\n          <th className=\"users__cel\">\n            <span>Последняя активность</span>\n          </th>\n          <th className=\"users__cel\">\n            <span>Последнее действие</span>\n          </th>\n          <th className=\"users__cel\">\n            <span>Продукт</span>\n          </th>\n          <th className=\"users__select\">\n            { isFiltered\n              ? `Найдено  ${users.length}`\n              : (\n                <ShowOption\n                  getShowAmount={getShowAmount}\n                />\n              )}\n          </th>\n\n        </tr>\n      </thead>\n      <tbody>\n        {users.map(user => (\n          <UserItem\n            user={user}\n            key={user.userId + user.lastActivity}\n            getUserId={getUserId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC } from 'react';\nimport './Header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <a href=\"/\">\n          <svg width=\"84\" height=\"16\" viewBox=\"0 0 84 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M7.8179 15.7072C6.33461 15.7072 4.9942 15.3874 3.79668 14.7478C2.61277 14.1082 1.68061 13.2305 1.0002 12.1146C0.3334 10.9852 0 9.7196 0 8.31795C0 6.91631 0.3334 5.65755 1.0002 4.54168C1.68061 3.4122 2.61277 2.52767 3.79668 1.88809C4.9942 1.2485 6.33461 0.928711 7.8179 0.928711C9.30119 0.928711 10.6348 1.2485 11.8187 1.88809C13.0026 2.52767 13.9348 3.4122 14.6152 4.54168C15.2956 5.65755 15.6358 6.91631 15.6358 8.31795C15.6358 9.7196 15.2956 10.9852 14.6152 12.1146C13.9348 13.2305 13.0026 14.1082 11.8187 14.7478C10.6348 15.3874 9.30119 15.7072 7.8179 15.7072ZM7.8179 12.8903C8.66161 12.8903 9.42367 12.6998 10.1041 12.3188C10.7845 11.9241 11.3152 11.3798 11.6962 10.6858C12.0909 9.99176 12.2882 9.20249 12.2882 8.31795C12.2882 7.43342 12.0909 6.64415 11.6962 5.95013C11.3152 5.25611 10.7845 4.71859 10.1041 4.33756C9.42367 3.94292 8.66161 3.74561 7.8179 3.74561C6.97419 3.74561 6.21214 3.94292 5.53173 4.33756C4.85132 4.71859 4.31379 5.25611 3.91916 5.95013C3.53813 6.64415 3.34761 7.43342 3.34761 8.31795C3.34761 9.20249 3.53813 9.99176 3.91916 10.6858C4.31379 11.3798 4.85132 11.9241 5.53173 12.3188C6.21214 12.6998 6.97419 12.8903 7.8179 12.8903Z\" fill=\"black\" />\n            <path d=\"M20.4552 15.7072C19.489 15.7072 18.5977 15.5303 17.7812 15.1765C16.9783 14.8091 16.3183 14.2919 15.8012 13.6251L17.6383 11.4206C18.6373 12.356 19.2985 12.9924 20.2919 12.9924C21.6391 12.9924 22.3127 12.2031 22.3127 10.6245V3.82725H19.5248V1.17366H25.5991V10.4408C25.5991 12.1963 25.1636 13.5163 24.2927 14.4008C23.4218 15.2717 22.1426 15.7072 20.4552 15.7072Z\" fill=\"black\" />\n            <path d=\"M35.7851 15.7072C34.3018 15.7072 32.9614 15.3874 31.7639 14.7478C30.58 14.1082 29.6478 13.2305 28.9674 12.1146C28.3006 10.9852 27.9672 9.7196 27.9672 8.31795C27.9672 6.91631 28.3006 5.65755 28.9674 4.54168C29.6478 3.4122 30.58 2.52767 31.7639 1.88809C32.9614 1.2485 34.3018 0.928711 35.7851 0.928711C37.2684 0.928711 38.602 1.2485 39.7859 1.88809C40.9698 2.52767 41.902 3.4122 42.5824 4.54168C43.2628 5.65755 43.603 6.91631 43.603 8.31795C43.603 9.7196 43.2628 10.9852 42.5824 12.1146C41.902 13.2305 40.9698 14.1082 39.7859 14.7478C38.602 15.3874 37.2684 15.7072 35.7851 15.7072ZM35.7851 12.8903C36.6288 12.8903 37.3909 12.6998 38.0713 12.3188C38.7517 11.9241 39.2824 11.3798 39.6634 10.6858C40.0581 9.99176 40.2554 9.20249 40.2554 8.31795C40.2554 7.43342 40.0581 6.64415 39.6634 5.95013C39.2824 5.25611 38.7517 4.71859 38.0713 4.33756C37.3909 3.94292 36.6288 3.74561 35.7851 3.74561C34.9414 3.74561 34.1793 3.94292 33.4989 4.33756C32.8185 4.71859 32.281 5.25611 31.8864 5.95013C31.5053 6.64415 31.3148 7.43342 31.3148 8.31795C31.3148 9.20249 31.5053 9.99176 31.8864 10.6858C32.281 11.3798 32.8185 11.9241 33.4989 12.3188C34.1793 12.6998 34.9414 12.8903 35.7851 12.8903Z\" fill=\"black\" />\n            <path d=\"M67.206 1.17366L62.5316 15.4622H58.9798L55.8363 5.78683L52.5908 15.4622H49.0595L44.3646 1.17366H47.7939L51.019 11.2165L54.3871 1.17366H57.4489L60.7149 11.2981L64.0421 1.17366H67.206Z\" fill=\"black\" />\n            <path d=\"M75.7924 15.7072C74.3091 15.7072 72.9687 15.3874 71.7712 14.7478C70.5872 14.1082 69.6551 13.2305 68.9747 12.1146C68.3079 10.9852 67.9745 9.7196 67.9745 8.31795C67.9745 6.91631 68.3079 5.65755 68.9747 4.54168C69.6551 3.4122 70.5872 2.52767 71.7712 1.88809C72.9687 1.2485 74.3091 0.928711 75.7924 0.928711C77.2757 0.928711 78.6093 1.2485 79.7932 1.88809C80.9771 2.52767 81.9092 3.4122 82.5897 4.54168C83.2701 5.65755 83.6103 6.91631 83.6103 8.31795C83.6103 9.7196 83.2701 10.9852 82.5897 12.1146C81.9092 13.2305 80.9771 14.1082 79.7932 14.7478C78.6093 15.3874 77.2757 15.7072 75.7924 15.7072ZM75.7924 12.8903C76.6361 12.8903 77.3981 12.6998 78.0785 12.3188C78.7589 11.9241 79.2897 11.3798 79.6707 10.6858C80.0653 9.99176 80.2627 9.20249 80.2627 8.31795C80.2627 7.43342 80.0653 6.64415 79.6707 5.95013C79.2897 5.25611 78.7589 4.71859 78.0785 4.33756C77.3981 3.94292 76.6361 3.74561 75.7924 3.74561C74.9487 3.74561 74.1866 3.94292 73.5062 4.33756C72.8258 4.71859 72.2883 5.25611 71.8936 5.95013C71.5126 6.64415 71.3221 7.43342 71.3221 8.31795C71.3221 9.20249 71.5126 9.99176 71.8936 10.6858C72.2883 11.3798 72.8258 11.9241 73.5062 12.3188C74.1866 12.6998 74.9487 12.8903 75.7924 12.8903Z\" fill=\"black\" />\n          </svg>\n          <span className=\"logo__text\">Beta</span>\n        </a>\n      </div>\n\n      <ul className=\"tool-bar\">\n        <li className=\"tool-bar__item message\">\n          Message\n        </li>\n        <li className=\"tool-bar__item user\">\n          Артем\n        </li>\n        <li className=\"tool-bar__item search\">\n          Search\n        </li>\n        <li className=\"tool-bar__item language\">\n          Ru\n        </li>\n      </ul>\n    </header>\n  );\n};\n","import React, { FC } from 'react';\nimport './ExpertsSelect.scss';\n\nexport const ExpertsSelect: FC = () => {\n  return (\n    <form action=\"#\" className=\"experts\">\n      <select className=\"experts__select\" defaultValue=\"Эксперт\" name=\"experts\" id=\"experts\">\n        <option value=\"Эксперт\" disabled>Эксперт</option>\n        <option value=\"Эксперт 2\">Эксперт 2</option>\n        <option value=\"Эксперт 3\">Эксперт 3</option>\n        <option value=\"Эксперт 4\">Эксперт 4</option>\n      </select>\n    </form>\n  );\n};\n","import React, { FC } from 'react';\n\nimport './MainNav.scss';\n\n\nexport const MainNav: FC = () => {\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M22.8 23.8H1C0.4 23.8 0 23.4 0 22.8V1C0 0.4 0.4 0 1 0C1.6 0 2 0.4 2 1V21.8H22.8C23.4 21.8 23.8 22.2 23.8 22.8C23.8 23.4 23.4 23.8 22.8 23.8Z\" fill=\"black\" />\n              <path d=\"M7 19.6C5.2 19.6 3.70001 18.1 3.70001 16.3C3.70001 14.5 5.2 13 7 13C8.8 13 10.3 14.5 10.3 16.3C10.3 18.1 8.8 19.6 7 19.6ZM7 15C6.3 15 5.70001 15.6 5.70001 16.3C5.70001 17 6.3 17.6 7 17.6C7.7 17.6 8.30002 17 8.30002 16.3C8.30002 15.6 7.7 15 7 15Z\" fill=\"black\" />\n              <path d=\"M19.8 17.3C18 17.3 16.5 15.8 16.5 14C16.5 12.2 18 10.7 19.8 10.7C21.6 10.7 23.1 12.2 23.1 14C23.1 15.8 21.6 17.3 19.8 17.3ZM19.8 12.6C19.1 12.6 18.5 13.2 18.5 13.9C18.5 14.6 19.1 15.2 19.8 15.2C20.5 15.2 21.1 14.6 21.1 13.9C21.1 13.2 20.5 12.6 19.8 12.6Z\" fill=\"black\" />\n              <path d=\"M12.3 9.79999C10.5 9.79999 9 8.3 9 6.5C9 4.7 10.5 3.20001 12.3 3.20001C14.1 3.20001 15.6 4.7 15.6 6.5C15.6 8.3 14.1 9.79999 12.3 9.79999ZM12.3 5.09998C11.6 5.09998 11 5.69996 11 6.39996C11 7.09996 11.6 7.70001 12.3 7.70001C13 7.70001 13.6 7.09996 13.6 6.39996C13.6 5.69996 13 5.09998 12.3 5.09998Z\" fill=\"black\" />\n              <path d=\"M8.20001 14.8C8.00001 14.8 7.90001 14.8 7.70001 14.7C7.20001 14.4 7.00001 13.8 7.30001 13.3L10.2 8.09995C10.5 7.59995 11.1 7.39998 11.6 7.69998C12.1 7.99998 12.3 8.59995 12 9.09995L9.1 14.3C8.9 14.6 8.60001 14.8 8.20001 14.8Z\" fill=\"black\" />\n              <path d=\"M18.3001 13.1C18.1001 13.1 17.8 13 17.6 12.8L13.3001 8.79998C12.9001 8.39998 12.9 7.79995 13.2 7.39995C13.6 6.99995 14.2 6.99998 14.6 7.29998L18.9001 11.3C19.3001 11.7 19.3 12.3 19 12.7C18.8 13 18.6001 13.1 18.3001 13.1Z\" fill=\"black\" />\n            </svg>\n            <span>Аналитика</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12.9447 26C12.2809 26 11.7277 25.7778 11.2851 25.3334L0.663803 14.6667C0.22125 14.2223 0 13.6667 0 13C0 12.3334 0.22125 11.7778 0.663803 11.3334L3.98295 8.00004C4.31487 7.66671 4.64678 7.55555 5.08933 7.66666C5.53189 7.77777 5.75318 8.11116 5.86382 8.5556C5.97445 9.00004 6.1957 9.44446 6.52762 9.7778C7.52336 10.7778 9.07231 10.7778 10.0681 9.7778C11.0638 8.7778 11.0638 7.22223 10.0681 6.22223C9.73614 5.88889 9.29362 5.6667 8.85106 5.55559C8.40851 5.44447 8.18725 5.22224 7.96597 4.77779C7.85533 4.33335 7.96596 4.00002 8.29787 3.66668L11.2851 0.666667C12.1702 -0.222222 13.7192 -0.222222 14.6043 0.666667L16.817 2.88889C17.0383 2.33333 17.3702 1.88888 17.8127 1.55554C18.6978 0.666653 19.9149 0.222263 21.1319 0.222263C22.3489 0.222263 23.5659 0.666653 24.451 1.55554C26.3319 3.44443 26.3319 6.44443 24.451 8.22221C24.0085 8.66666 23.5659 8.88891 23.1234 9.22224L25.3361 11.4445C25.7787 11.8889 26 12.4445 26 13.1111C26 13.7778 25.7787 14.3334 25.3361 14.7778L22.3489 17.7778C22.017 18.1111 21.6851 18.2222 21.2426 18.1111C20.8 18 20.5787 17.6667 20.4681 17.2223C20.3574 16.7778 20.1361 16.3333 19.8042 16C18.8085 15 17.2596 15 16.2638 16C15.2681 17 15.2681 18.5556 16.2638 19.5556C16.5958 19.8889 17.0383 20.1112 17.4808 20.2223C17.9234 20.3334 18.1447 20.5556 18.3659 21C18.4766 21.4444 18.3659 21.7778 18.034 22.1111L14.7149 25.4444C14.1617 25.7778 13.6085 26 12.9447 26ZM4.42553 10.6667L2.21277 12.8889V13V13.1111L12.834 23.7778C12.9447 23.8889 12.9447 23.8889 13.0553 23.7778L15.2681 21.5556C15.0468 21.4444 14.8255 21.2222 14.6043 21C12.7234 19.1111 12.7234 16.1111 14.6043 14.3333C15.4894 13.4444 16.7064 13 17.9234 13C19.1404 13 20.3575 13.4444 21.2426 14.3333C21.4638 14.5555 21.6851 14.7778 21.7958 15L23.6766 13.1111V13V12.8889L20.0255 9.22224C19.6936 8.88891 19.5829 8.44449 19.8042 8.00004C20.0255 7.5556 20.468 7.33334 20.9106 7.33334C21.6851 7.33334 22.3489 7.11114 22.9021 6.6667C23.8979 5.6667 23.8979 4.11113 22.9021 3.11113C21.9064 2.11113 20.3574 2.11113 19.3617 3.11113C18.8085 3.66668 18.5872 4.33334 18.6978 5.11111C18.6978 5.55556 18.4766 6 18.034 6.22223C17.5915 6.44445 17.1489 6.33332 16.817 5.99999L13.1659 2.33333C13.0553 2.22222 13.0553 2.22222 12.9447 2.33333L11.0638 4.22224C11.2851 4.33335 11.5064 4.55557 11.7276 4.77779C13.6085 6.66668 13.6085 9.66669 11.7276 11.4445C10.8425 12.3334 9.6255 12.7778 8.40848 12.7778C7.19146 12.7778 5.97444 12.3334 5.08933 11.4445C4.75742 11.1111 4.53617 10.8889 4.42553 10.6667Z\" fill=\"black\" />\n            </svg>\n            <span>Продукт</span>\n          </a>\n        </li>\n        <li className=\"nav__item nav__item--active\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8.70529 10.9305C6.02845 10.9305 3.9093 8.47668 3.9093 5.46524C3.9093 2.45379 6.02845 0 8.70529 0C11.3821 0 13.5013 2.45379 13.5013 5.46524C13.6129 8.58821 11.3821 10.9305 8.70529 10.9305ZM8.70529 2.34234C7.25534 2.34234 6.14 3.79219 6.14 5.57674C6.14 7.3613 7.36687 8.81128 8.70529 8.81128C10.0437 8.81128 11.2706 7.3613 11.2706 5.57674C11.3822 3.79219 10.1552 2.34234 8.70529 2.34234Z\" fill=\"#000\" />\n              <path d=\"M15.8445 23.1991H1.45643C0.898758 23.1991 0.341084 22.753 0.341084 22.1953L0.00649293 17.5109C-0.105042 15.7263 1.23339 13.7187 3.01795 13.0495C6.6986 11.7111 10.6023 11.7111 14.2829 13.0495C16.0675 13.7187 17.4059 15.7263 17.2944 17.5109L16.9598 22.1953C16.8483 22.753 16.4021 23.1991 15.8445 23.1991ZM2.46027 20.9685H14.7291L14.9522 17.3994C14.9522 16.7302 14.283 15.5033 13.3907 15.1687C10.2677 14.0533 6.81011 14.0533 3.68713 15.1687C2.79485 15.5033 2.12568 16.6186 2.12568 17.3994L2.46027 20.9685Z\" fill=\"#000\" />\n              <path d=\"M15.8445 23.1991H1.45643C0.898758 23.1991 0.341084 22.753 0.341084 22.1953L0.00649293 17.5109C-0.105042 15.7263 1.23339 13.7187 3.01795 13.0495C6.6986 11.7111 10.6023 11.7111 14.2829 13.0495C16.0675 13.7187 17.4059 15.7263 17.2944 17.5109L16.9598 22.1953C16.8483 22.753 16.4021 23.1991 15.8445 23.1991ZM2.46027 20.9685H14.7291L14.9522 17.3994C14.9522 16.7302 14.283 15.5033 13.3907 15.1687C10.2677 14.0533 6.81011 14.0533 3.68713 15.1687C2.79485 15.5033 2.12568 16.6186 2.12568 17.3994L2.46027 20.9685Z\" fill=\"#000\" />\n              <path d=\"M24.5438 23.1991H18.8555C18.1863 23.1991 17.7402 22.753 17.7402 22.0837C17.7402 21.4145 18.1863 20.9684 18.8555 20.9684H23.54L23.763 17.957C23.763 17.3993 23.2054 16.5069 22.5362 16.1723C21.3093 15.7262 19.9709 15.5032 18.6324 15.5032C17.9632 15.5032 17.5171 14.9455 17.5171 14.3878C17.5171 13.7186 18.0748 13.2725 18.6324 13.2725C20.1939 13.2725 21.7554 13.6071 23.3169 14.1648C24.8784 14.7225 26.1052 16.507 25.9937 18.18L25.7707 22.1953C25.5476 22.7529 25.1014 23.1991 24.5438 23.1991Z\" fill=\"#000\" />\n              <path d=\"M20.0838 12.1572C17.8531 12.1572 16.0685 10.1496 16.0685 7.69583C16.0685 5.24206 17.8531 3.23444 20.0838 3.23444C22.3145 3.23444 24.0991 5.24206 24.0991 7.69583C24.0991 10.1496 22.3145 12.1572 20.0838 12.1572ZM20.0838 5.46513C19.08 5.46513 18.2992 6.46895 18.2992 7.69583C18.2992 8.92272 19.08 9.92653 20.0838 9.92653C21.0876 9.92653 21.8684 8.92272 21.8684 7.69583C21.8684 6.46895 21.0876 5.46513 20.0838 5.46513Z\" fill=\"#000\" />\n            </svg>\n            <span>Пользователи</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M22.8 23.8H1C0.4 23.8 0 23.4 0 22.8V1C0 0.4 0.4 0 1 0H22.8C23.4 0 23.8 0.4 23.8 1V22.8C23.8 23.3 23.3 23.8 22.8 23.8ZM2 21.8H21.8V2H2V21.8Z\" fill=\"black\" />\n              <path d=\"M22.4 7.29999H1.30005C1.00005 7.29999 0.800049 7.09999 0.800049 6.79999C0.800049 6.49999 1.00005 6.29999 1.30005 6.29999H22.4C22.7 6.29999 22.9 6.49999 22.9 6.79999C22.9 7.09999 22.7 7.29999 22.4 7.29999Z\" fill=\"black\" />\n              <path d=\"M4.5 2.89996C3.8 2.89996 3.19995 3.49995 3.19995 4.19995C3.19995 4.89995 3.8 5.5 4.5 5.5C5.2 5.5 5.80005 4.89995 5.80005 4.19995C5.80005 3.49995 5.2 2.89996 4.5 2.89996Z\" fill=\"black\" />\n              <path d=\"M8 2.89996C7.3 2.89996 6.69995 3.49995 6.69995 4.19995C6.69995 4.89995 7.3 5.5 8 5.5C8.7 5.5 9.30005 4.89995 9.30005 4.19995C9.20005 3.49995 8.7 2.89996 8 2.89996Z\" fill=\"black\" />\n              <path d=\"M11.4 2.89996C10.7 2.89996 10.1 3.49995 10.1 4.19995C10.1 4.89995 10.7 5.5 11.4 5.5C12.1 5.5 12.7 4.89995 12.7 4.19995C12.6 3.49995 12.1 2.89996 11.4 2.89996Z\" fill=\"black\" />\n              <path d=\"M15.1 15.5H8.69995C8.09995 15.5 7.69995 15.1 7.69995 14.5C7.69995 13.9 8.09995 13.5 8.69995 13.5H15.1C15.7 13.5 16.1 13.9 16.1 14.5C16.1 15 15.6 15.5 15.1 15.5Z\" fill=\"black\" />\n              <path d=\"M11.9 18.6C11.3 18.6 10.9 18.2 10.9 17.6V11.2C10.9 10.6 11.3 10.2 11.9 10.2C12.5 10.2 12.9 10.6 12.9 11.2V17.6C12.9 18.2 12.4 18.6 11.9 18.6Z\" fill=\"black\" />\n            </svg>\n            <span>Констурктор сайта</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"22\" height=\"25\" viewBox=\"0 0 22 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M10.9376 15.7001C8.53756 15.7001 6.5376 13.7 6.5376 11.3C6.5376 8.90005 8.53756 6.90002 10.9376 6.90002C13.3376 6.90002 15.3376 8.90005 15.3376 11.3C15.3376 13.7 13.3376 15.7001 10.9376 15.7001ZM10.9376 8.90002C9.63756 8.90002 8.5376 10 8.5376 11.3C8.5376 12.6 9.63756 13.7001 10.9376 13.7001C12.2376 13.7001 13.3376 12.6 13.3376 11.3C13.3376 10 12.2376 8.90002 10.9376 8.90002Z\" fill=\"black\" />\n              <path d=\"M10.9376 21.7001C5.23756 21.7001 0.537598 17 0.537598 11.3C0.537598 5.60005 5.23756 0.900024 10.9376 0.900024C16.6376 0.900024 21.3376 5.60005 21.3376 11.3C21.3376 17 16.6376 21.7001 10.9376 21.7001ZM10.9376 2.90002C6.33756 2.90002 2.5376 6.70005 2.5376 11.3C2.5376 15.9 6.33756 19.7001 10.9376 19.7001C15.5376 19.7001 19.3376 15.9 19.3376 11.3C19.3376 6.70005 15.5376 2.90002 10.9376 2.90002Z\" fill=\"black\" />\n              <path d=\"M16.4375 24.7001H5.53757C5.23757 24.7001 4.83755 24.5001 4.63755 24.2001C4.43755 23.9001 4.43755 23.5001 4.63755 23.2001L6.43754 19.5C6.63754 19 7.23759 18.8 7.73759 19C9.83759 19.8 12.1375 19.8 14.1375 19C14.6375 18.8 15.1375 19 15.4375 19.5L17.3376 23.2001C17.5376 23.5001 17.4376 23.9001 17.3376 24.2001C17.0376 24.5001 16.7375 24.7001 16.4375 24.7001ZM7.13755 22.7001H14.8376L14.1375 21.2001C12.1375 21.8001 9.93754 21.8001 7.93754 21.2001L7.13755 22.7001Z\" fill=\"black\" />\n            </svg>\n            <span>Рассылка</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"23\" viewBox=\"0 0 24 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21.3378 21.7H3.13778C2.33778 21.7 1.63779 21.2 1.43779 20.5C1.33779 20.3 1.43778 20.1 1.53778 19.9L8.63778 13.6C8.83778 13.4 9.13778 13.4 9.33778 13.6C9.53778 13.8 9.53778 14.1 9.33778 14.3L2.53778 20.3C2.73778 20.5 2.93778 20.6 3.13778 20.6H21.3378C21.5378 20.6 21.8378 20.5 21.9378 20.3L15.0378 14.2C14.8378 14 14.8378 13.7 15.0378 13.5C15.2378 13.3 15.5378 13.3 15.7378 13.5L22.9378 19.9C23.1378 20 23.1378 20.3 23.0378 20.4C22.7378 21.2 22.0378 21.7 21.3378 21.7Z\" fill=\"black\" />\n              <path d=\"M15.2378 4.80007C15.0378 4.80007 14.8378 4.7 14.7378 4.6L12.3378 2.2001L9.9378 4.6C9.6378 4.9 9.13779 4.9 8.83779 4.6C8.53779 4.3 8.53779 3.80002 8.83779 3.50002L11.8378 0.500024C12.1378 0.200024 12.6378 0.200024 12.9378 0.500024L15.9378 3.50002C16.2378 3.80002 16.2378 4.3 15.9378 4.6C15.6378 4.7 15.4378 4.80007 15.2378 4.80007Z\" fill=\"black\" />\n              <path d=\"M12.2378 12.2001C11.8378 12.2001 11.4378 11.9 11.4378 11.4V1.80005C11.4378 1.40005 11.7378 1 12.2378 1C12.6378 1 13.0378 1.30005 13.0378 1.80005V11.4C12.9378 11.9 12.6378 12.2001 12.2378 12.2001Z\" fill=\"black\" />\n              <path d=\"M21.3378 22.2001H3.1378C1.8378 22.2001 0.737793 21.1 0.737793 19.8V7.90002C0.737793 6.60002 1.8378 5.5 3.1378 5.5H9.5378C10.1378 5.5 10.5378 5.9 10.5378 6.5C10.5378 7.1 10.1378 7.5 9.5378 7.5H3.1378C2.9378 7.5 2.73779 7.70002 2.73779 7.90002V19.8C2.73779 20 2.9378 20.2001 3.1378 20.2001H21.3378C21.5378 20.2001 21.7378 20 21.7378 19.8V7.90002C21.7378 7.70002 21.5378 7.5 21.3378 7.5H14.9378C14.3378 7.5 13.9378 7.1 13.9378 6.5C13.9378 5.9 14.3378 5.5 14.9378 5.5H21.3378C22.6378 5.5 23.7378 6.60002 23.7378 7.90002V19.8C23.6378 21.1 22.6378 22.2001 21.3378 22.2001Z\" fill=\"black\" />\n              <path d=\"M12.2378 17.2C12.1378 17.2 12.0378 17.2 11.9378 17.1L1.63779 7.9C1.43779 7.7 1.43779 7.40005 1.63779 7.20005C1.83779 7.00005 2.13779 7.00005 2.33779 7.20005L12.3378 16.1L22.3378 7.20005C22.5378 7.00005 22.8378 7.00005 23.0378 7.20005C23.2378 7.40005 23.2378 7.7 23.0378 7.9L12.7378 17.1C12.4378 17.2 12.3378 17.2 12.2378 17.2Z\" fill=\"black\" />\n            </svg>\n            <span>Рассылка</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M22.7999 23.8H1C0.4 23.8 0 23.4 0 22.8V1C0 0.4 0.4 0 1 0H22.7999C23.3999 0 23.7999 0.4 23.7999 1V22.8C23.7999 23.4 23.3999 23.8 22.7999 23.8ZM2 21.8H21.7999V2H2V21.8Z\" fill=\"black\" />\n              <path d=\"M18.9 9.69995H15C14.4 9.69995 14 9.29995 14 8.69995C14 8.09995 14.4 7.69995 15 7.69995H18.9C19.5 7.69995 19.9 8.09995 19.9 8.69995C19.9 9.29995 19.4 9.69995 18.9 9.69995Z\" fill=\"black\" />\n              <path d=\"M8.40002 9.69995H5.19995C4.59995 9.69995 4.19995 9.29995 4.19995 8.69995C4.19995 8.09995 4.59995 7.69995 5.19995 7.69995H8.40002C9.00002 7.69995 9.40002 8.09995 9.40002 8.69995C9.40002 9.29995 8.90002 9.69995 8.40002 9.69995Z\" fill=\"black\" />\n              <path d=\"M8.40002 17.1H5.19995C4.59995 17.1 4.19995 16.7 4.19995 16.1C4.19995 15.5 4.59995 15.1 5.19995 15.1H8.40002C9.00002 15.1 9.40002 15.5 9.40002 16.1C9.40002 16.6 8.90002 17.1 8.40002 17.1Z\" fill=\"black\" />\n              <path d=\"M12 11.4H8.69995C8.09995 11.4 7.69995 11 7.69995 10.4V7.09998C7.69995 6.49998 8.09995 6.09998 8.69995 6.09998H12C12.6 6.09998 13 6.49998 13 7.09998V10.4C13 10.9 12.6 11.4 12 11.4ZM9.69995 9.39996H11V8.09998H9.69995V9.39996Z\" fill=\"black\" />\n              <path d=\"M18.9 17.1H15C14.4 17.1 14 16.7 14 16.1C14 15.5 14.4 15.1 15 15.1H18.9C19.5 15.1 19.9 15.5 19.9 16.1C19.9 16.6 19.4 17.1 18.9 17.1Z\" fill=\"black\" />\n              <path d=\"M12 18.7H8.69995C8.09995 18.7 7.69995 18.3 7.69995 17.7V14.4C7.69995 13.8 8.09995 13.4 8.69995 13.4H12C12.6 13.4 13 13.8 13 14.4V17.7C13 18.3 12.6 18.7 12 18.7ZM9.69995 16.7H11V15.4H9.69995V16.7Z\" fill=\"black\" />\n              <path d=\"M4.69995 17.1C4.09995 17.1 3.69995 16.7 3.69995 16.1V4.5C3.69995 3.9 4.09995 3.5 4.69995 3.5C5.29995 3.5 5.69995 3.9 5.69995 4.5V16.1C5.69995 16.6 5.19995 17.1 4.69995 17.1Z\" fill=\"black\" />\n            </svg>\n            <span>Маркетинг</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"17\" viewBox=\"0 0 24 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M20.8 16.8H2.39999C1.09999 16.8 0 15.7 0 14.4V2.39996C0 1.09996 1.09999 0 2.39999 0H20.8C22.1 0 23.2 1.09996 23.2 2.39996V14.4C23.2 15.7 22.1 16.8 20.8 16.8ZM2.39999 2C2.19999 2 2 2.19996 2 2.39996V14.4C2 14.6 2.19999 14.8 2.39999 14.8H20.8C21 14.8 21.2 14.6 21.2 14.4V2.39996C21.2 2.19996 21 2 20.8 2H2.39999Z\" fill=\"black\" />\n              <path d=\"M22.1 6.39996H1C0.4 6.39996 0 5.99996 0 5.39996C0 4.79996 0.4 4.39996 1 4.39996H22.1C22.7 4.39996 23.1 4.79996 23.1 5.39996C23.1 5.99996 22.7 6.39996 22.1 6.39996Z\" fill=\"black\" />\n              <path d=\"M6.39996 11.5H4.09998V9.5H6.39996V11.5Z\" fill=\"black\" />\n            </svg>\n            <span>Платежи</span>\n          </a>\n        </li>\n        <li className=\"nav__item\">\n          <a href=\"/\" className=\"nav__link\">\n            <svg className=\"nav__svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M13 23.5H10.4C9.50002 23.5 8.70007 22.7 8.70007 21.8V20.1L7.90002 19.8L6.70007 20.9C6.10007 21.5 4.90005 21.5 4.30005 20.9L2.5 19.1C2.2 18.8 2 18.4 2 17.9C2 17.4 2.2 17 2.5 16.7L3.70007 15.5L3.40002 14.7H1.70007C0.800073 14.7 0 13.9 0 13V10.4C0 9.50002 0.800073 8.70001 1.70007 8.70001H3.40002L3.70007 7.90002L2.59998 6.70001C2.29998 6.40001 2.09998 6 2.09998 5.5C2.09998 5 2.29998 4.60005 2.59998 4.30005L4.40002 2.5C5.00002 1.9 6.20005 1.9 6.80005 2.5L8 3.70001L8.80005 3.40002V1.70001C8.80005 0.800012 9.6 0 10.5 0H13.1C14 0 14.8 0.800012 14.8 1.70001V3.40002L15.6 3.70001L16.8 2.60004C17.1 2.30004 17.6 2.10004 18 2.10004C18.5 2.10004 18.9001 2.30004 19.2001 2.60004L21 4.40002C21.3 4.70002 21.5 5.10004 21.5 5.60004C21.5 6.10004 21.3 6.50005 21 6.80005L19.8 8L20.1 8.80005H21.8C22.7 8.80005 23.5 9.6 23.5 10.5V13.1C23.5 14 22.7 14.8 21.8 14.8H20.1L19.8 15.6L20.9 16.8C21.2 17.1 21.4 17.5 21.4 18C21.4 18.5 21.2 18.9 20.9 19.2L19.1 21C18.5 21.6 17.3001 21.6 16.7001 21L15.5 19.8L14.7001 20.1V21.8C14.7001 22.8 13.9 23.5 13 23.5ZM10.7001 21.5H12.7001V20.1C12.7001 19.3 13.3 18.5 14 18.2L14.7001 17.9C14.9001 17.8 15.2 17.7 15.5 17.7C16 17.7 16.6 17.9 16.9 18.3L17.9 19.3L19.3 17.9L18.3 16.9C17.7 16.3 17.6 15.3 17.9 14.6L18.2001 13.9C18.4001 13.2 19.2 12.6 20 12.6H21.4V10.6H20C19.2 10.6 18.4 10 18.1 9.20001L17.8 8.5C17.5 7.8 17.6001 6.90005 18.2001 6.30005L19.2001 5.30005L17.8 3.90002L16.8 4.90002C16.2 5.50002 15.2 5.60005 14.5 5.30005L13.8 5C13.1 4.8 12.5 4.00001 12.5 3.20001V1.80005H10.5V3.20001C10.5 4.00001 9.90007 4.80004 9.20007 5.10004L8.5 5.40002C8.3 5.50002 8.00007 5.60004 7.70007 5.60004C7.20007 5.60004 6.60005 5.4 6.30005 5L5.30005 4L3.90002 5.40002L4.90002 6.40002C5.50002 7.00002 5.60005 8.00001 5.30005 8.70001L5 9.40002C4.8 10.1 4.00007 10.7 3.20007 10.7H1.80005V12.7H3.20007C4.00007 12.7 4.79998 13.3 5.09998 14L5.40002 14.7C5.70002 15.4 5.6 16.3 5 16.9L4 17.9L5.40002 19.3L6.40002 18.3C7.00002 17.7 8.00007 17.6 8.70007 17.9L9.40002 18.2C10.1 18.4 10.7001 19.2 10.7001 20V21.5ZM11.7001 16.2C9.30007 16.2 7.30005 14.2 7.30005 11.8C7.30005 9.40005 9.30007 7.40002 11.7001 7.40002C14.1001 7.40002 16.1 9.40005 16.1 11.8C16.1 14.2 14.1001 16.2 11.7001 16.2ZM11.7001 9.40002C10.4001 9.40002 9.30005 10.5 9.30005 11.8C9.30005 13.1 10.4001 14.2 11.7001 14.2C13.0001 14.2 14.1 13.1 14.1 11.8C14.1 10.5 13.0001 9.40002 11.7001 9.40002Z\" fill=\"black\" />\n            </svg>\n            <span>Настройки</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { FC } from 'react';\nimport { ExpertsSelect } from '../ExpertsSelect';\nimport { MainNav } from '../MainNav';\n\nimport './Navigation.scss';\n\nexport const Navigation: FC = () => {\n  return (\n    <aside className=\"aside\">\n      <ExpertsSelect />\n      <MainNav />\n    </aside>\n  );\n};\n","import React, { FC } from 'react';\nimport './Modal.scss';\n\nexport const Modal: FC = ({ children }) => {\n  return (\n    <div className=\"modal__backdrop\">\n      <div className=\"modal__wrapper\">\n        <div className=\"modal__content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport './FilterParams.scss';\nimport moment from 'moment';\n\ninterface Props {\n  dates: Date[];\n}\n\nexport const FilterParams: FC<Props> = ({ dates }) => {\n  return (\n    <div className=\"params-wrapper\">\n      <div className=\"params\">\n        {dates[0] === dates[1]\n          ? `${moment(dates[0]).format('D MMM YYYY')} г.`\n          : `${moment(dates[0]).format('D MMM')} - ${moment(dates[1]).format('D MMM YYYY')} г.`}\n        <button type=\"button\" className=\"params__close\">close</button>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport './SelectTimeInterval.scss';\n\ninterface Props {\n  getOption: (str: string) => void;\n  options: string[];\n  lastOption: string;\n}\n\nexport const SelectTimeInterval: FC<Props> = ({ lastOption, getOption, options }) => {\n  const [activeOption, setActiveOption] = useState(lastOption);\n\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const opt: string = e.currentTarget.innerText;\n\n    setActiveOption(opt);\n    getOption(opt);\n  };\n\n  return (\n    <div className=\"select\">\n      {options.map(opt => (\n        <button\n          key={opt}\n          type=\"button\"\n          onClick={handleClick}\n          className={classNames({\n            select__btn: 'select__btn',\n            'select__btn--active': activeOption === opt,\n          })}\n        >\n          {opt}\n        </button>\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, {FC,  useState} from 'react';\nimport { Calendar } from 'primereact/calendar';\nimport {\n  ru,\n  allTime,\n  now,\n  yesterday,\n  lastWeek,\n  lastMonth,\n  lastThirtyDays,\n  lastDayLastMonth,\n  thisMonth,\n} from '../../constants/data';\nimport { Modal } from '../Modal';\nimport { FilterParams } from '../FilterParams';\nimport { SelectTimeInterval } from '../SelectTimeInterval';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport './Filter.scss';\nimport './Calendar.scss';\n\n\ninterface Props {\n  onFilter: (field: string, start: Date, end: Date) => void;\n}\n\nexport const Filter: FC<Props> = ({ onFilter }) => {\n  const [startDate, setStartDate] = useState(now);\n  const [endDate, setEndDate] = useState(now);\n  const [filterBy, setFilterBy] = useState('');\n  const [openFilter, setOpenFilter] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [option, setOption] = useState('Сегодня');\n  const [isDisabled, setIsDisabled] = useState<boolean | undefined>(true);\n\n  const setFilterOption = (opt: string) => {\n    let filterOption = '';\n\n    switch (opt) {\n      case 'По дате регистрации':\n        filterOption = 'По дате регистрации';\n        break;\n      case 'По дате последней активности':\n        filterOption = 'По дате последней активности';\n        break;\n      default:\n        return;\n    }\n\n    setFilterBy(filterOption);\n    setOpenFilter(false);\n  };\n\n  const dateTemplate = (date: any) => {\n    const day = new Date(`${date.month + 1}/${date.day}/${date.year}`);\n\n    if (startDate === endDate) {\n      return (\n        <div className=\"none\">{date.day}</div>\n      );\n    }\n\n    if (day > startDate && day < endDate) {\n      return (\n        <div className=\"date__interval\">{date.day}</div>\n      );\n    }\n\n    if (\n      date.day === startDate.getDate()\n      && date.month === startDate.getMonth()\n      && date.year === startDate.getFullYear()\n    ) {\n      return (\n        <div className=\"date__interval date__interval--start\">{date.day}</div>\n      );\n    }\n\n    if (\n      day === endDate\n    // && (date.month === endDate.getMonth()\n    // || date.month === endDate.getMonth())\n    ) {\n      return (\n        <div className=\"date__interval date__interval--end\">{date.day}</div>\n      );\n    }\n\n    return date.day;\n  };\n\n  const setDataInterval = () => {\n    switch (option) {\n      case 'Весь срок':\n        setStartDate(allTime);\n        setEndDate(now);\n        break;\n      case 'Сегодня':\n        setStartDate(now);\n        setEndDate(now);\n        break;\n      case 'Вчера':\n        setStartDate(new Date(yesterday));\n        setEndDate(new Date(yesterday));\n        break;\n      case 'Последние 7 дней':\n        setStartDate(new Date(lastWeek));\n        setEndDate(now);\n        break;\n      case 'Последние 30 дней':\n        setStartDate(new Date(lastThirtyDays));\n        setEndDate(now);\n        break;\n      case 'В этом месяце':\n        setStartDate(new Date(thisMonth));\n        setEndDate(now);\n        break;\n      case 'Прошлый месяц':\n        setStartDate(new Date(lastMonth));\n        setEndDate(new Date(lastDayLastMonth));\n        break;\n      default:\n    }\n  };\n\n  const setDataOption = (opt: string) => {\n    setOption(opt);\n    setIsDisabled(undefined);\n\n    setDataInterval();\n    onFilter(filterBy, startDate, endDate);\n  };\n\n  const handleClickOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseCancel = () => {\n    setOpen(false);\n  };\n\n  const handleCalendarChange = (event : any) => {\n    setEndDate(new Date(event.value));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setIsDisabled(true);\n  };\n\n  return (\n    <div className=\"flex-container filter\">\n      <div className=\"filter__col\">\n        <button className=\"filter-btn btn__select\" type=\"button\" onClick={handleClickOpen}>\n          <svg width=\"23\" height=\"20\" viewBox=\"0 0 23 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M21.5001 20H1C0.4 20 0 19.6 0 19V2.70001C0 2.10001 0.4 1.70001 1 1.70001H21.5001C22.1001 1.70001 22.5001 2.10001 22.5001 2.70001V19C22.5001 19.5 22.1001 20 21.5001 20ZM2 18H20.5001V3.70001H2V18Z\" fill=\"black\" />\n            <path d=\"M17.7002 5.29999C17.1002 5.29999 16.7002 4.89999 16.7002 4.29999V1C16.7002 0.4 17.1002 0 17.7002 0C18.3002 0 18.7002 0.4 18.7002 1V4.29999C18.7002 4.89999 18.3002 5.29999 17.7002 5.29999Z\" fill=\"black\" />\n            <path d=\"M5.00006 5.29999C4.40006 5.29999 4 4.89999 4 4.29999V1C4 0.4 4.40006 0 5.00006 0C5.60006 0 6.00006 0.4 6.00006 1V4.29999C6.00006 4.89999 5.50006 5.29999 5.00006 5.29999Z\" fill=\"black\" />\n            <path d=\"M21.5002 8.60004H1.2002C0.900195 8.60004 0.700195 8.40004 0.700195 8.10004C0.700195 7.80004 0.900195 7.60004 1.2002 7.60004H21.5002C21.8002 7.60004 22.0002 7.80004 22.0002 8.10004C22.0002 8.30004 21.8002 8.60004 21.5002 8.60004Z\" fill=\"black\" />\n            <path d=\"M5.7002 10.6H3.7002V12.5H5.7002V10.6Z\" fill=\"black\" />\n            <path d=\"M9.00012 10.6H7.1001V12.5H9.00012V10.6Z\" fill=\"black\" />\n            <path d=\"M12.3999 10.6H10.5V12.5H12.3999V10.6Z\" fill=\"black\" />\n            <path d=\"M15.7998 10.6H13.7998V12.5H15.7998V10.6Z\" fill=\"black\" />\n            <path d=\"M19.1002 10.6H17.2002V12.5H19.1002V10.6Z\" fill=\"black\" />\n            <path d=\"M5.7002 13.7H3.7002V15.7H5.7002V13.7Z\" fill=\"black\" />\n            <path d=\"M9.00012 13.7H7.1001V15.7H9.00012V13.7Z\" fill=\"black\" />\n            <path d=\"M12.3999 13.7H10.5V15.7H12.3999V13.7Z\" fill=\"black\" />\n            <path d=\"M15.7998 13.7H13.7998V15.7H15.7998V13.7Z\" fill=\"black\" />\n            <path d=\"M19.1002 13.7H17.2002V15.7H19.1002V13.7Z\" fill=\"black\" />\n          </svg>\n          {option}\n        </button>\n        <button className=\"filter-btn btn__filter\" type=\"button\" onClick={handleClickOpenFilter}>\n          <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M3.2998 10.5C2.6998 10.5 2.2998 10.1 2.2998 9.5V1C2.2998 0.4 2.6998 0 3.2998 0C3.8998 0 4.2998 0.4 4.2998 1V9.5C4.2998 10 3.7998 10.5 3.2998 10.5Z\" fill=\"black\" />\n            <path d=\"M3.2998 23.5C2.6998 23.5 2.2998 23.1 2.2998 22.5V15.2C2.2998 14.6 2.6998 14.2 3.2998 14.2C3.8998 14.2 4.2998 14.6 4.2998 15.2V22.5C4.2998 23.1 3.7998 23.5 3.2998 23.5Z\" fill=\"black\" />\n            <path d=\"M3.29999 15.7999C1.49999 15.7999 0 14.3 0 12.5C0 10.7 1.49999 9.19995 3.29999 9.19995C5.09999 9.19995 6.60004 10.7 6.60004 12.5C6.60004 14.3 5.09999 15.7999 3.29999 15.7999ZM3.29999 11.2999C2.59999 11.2999 2 11.9 2 12.6C2 13.3 2.59999 13.8999 3.29999 13.8999C3.99999 13.8999 4.60004 13.3 4.60004 12.6C4.60004 11.9 3.99999 11.2999 3.29999 11.2999Z\" fill=\"black\" />\n            <path d=\"M10.6997 15.2C10.0997 15.2 9.69971 14.8 9.69971 14.2V1C9.69971 0.4 10.0997 0 10.6997 0C11.2997 0 11.6997 0.4 11.6997 1V14.2C11.6997 14.7 11.2997 15.2 10.6997 15.2Z\" fill=\"black\" />\n            <path d=\"M10.6997 23.5C10.0997 23.5 9.69971 23.1 9.69971 22.5V19.2C9.69971 18.6 10.0997 18.2 10.6997 18.2C11.2997 18.2 11.6997 18.6 11.6997 19.2V22.5C11.6997 23.1 11.2997 23.5 10.6997 23.5Z\" fill=\"black\" />\n            <path d=\"M10.6999 19.7999C8.89989 19.7999 7.3999 18.3 7.3999 16.5C7.3999 14.7 8.89989 13.2 10.6999 13.2C12.4999 13.2 13.9999 14.7 13.9999 16.5C13.9999 18.3 12.4999 19.7999 10.6999 19.7999ZM10.6999 15.2999C9.99989 15.2999 9.3999 15.9 9.3999 16.6C9.3999 17.3 9.99989 17.8999 10.6999 17.8999C11.3999 17.8999 11.9999 17.3 11.9999 16.6C11.9999 15.9 11.3999 15.2999 10.6999 15.2999Z\" fill=\"black\" />\n            <path d=\"M18.1997 5.69995C17.5997 5.69995 17.1997 5.29995 17.1997 4.69995V1C17.1997 0.4 17.5997 0 18.1997 0C18.7997 0 19.1997 0.4 19.1997 1V4.69995C19.1997 5.19995 18.7997 5.69995 18.1997 5.69995Z\" fill=\"black\" />\n            <path d=\"M18.1997 23.5C17.5997 23.5 17.1997 23.1 17.1997 22.5V9.5C17.1997 8.9 17.5997 8.5 18.1997 8.5C18.7997 8.5 19.1997 8.9 19.1997 9.5V22.5C19.1997 23.1 18.7997 23.5 18.1997 23.5Z\" fill=\"black\" />\n            <path d=\"M18.1999 10.2C16.3999 10.2 14.8999 8.6999 14.8999 6.8999C14.8999 5.0999 16.3999 3.59998 18.1999 3.59998C19.9999 3.59998 21.4999 5.0999 21.4999 6.8999C21.4999 8.6999 19.9999 10.2 18.1999 10.2ZM18.1999 5.69995C17.4999 5.69995 16.8999 6.3 16.8999 7C16.8999 7.7 17.4999 8.29993 18.1999 8.29993C18.8999 8.29993 19.4999 7.7 19.4999 7C19.4999 6.3 18.8999 5.69995 18.1999 5.69995Z\" fill=\"black\" />\n          </svg>\n          {filterBy || 'Фильтр'}\n        </button>\n      </div>\n      <div className=\"filter__col\">\n        <button className=\"btn btn--secondary\" type=\"button\">Выгрузить</button>\n        <button className=\"btn btn--primary\" type=\"button\">Добавить контакт</button>\n      </div>\n\n      <FilterParams\n        dates={[startDate, endDate]}\n      />\n      {openFilter && (\n        <Modal>\n          <SelectTimeInterval\n            lastOption={option}\n            options={['По дате регистрации', 'По дате последней активности']}\n            getOption={(str: string) => setFilterOption(str)}\n          />\n        </Modal>\n      )}\n      {open && (\n        <Modal>\n          <SelectTimeInterval\n            options={['Весь срок', 'Сегодня', 'Вчера', 'Последние 7 дней', 'Последние 30 дней', 'В этом месяце', 'Прошлый месяц']}\n            getOption={(str: string) => setDataOption(str)}\n            lastOption={option}\n          />\n          <div className=\"calendar__wrapper\">\n            <Calendar\n              dateTemplate={dateTemplate}\n              inline\n              locale={ru}\n              value={[startDate, endDate]}\n              dateFormat=\"dd/mm/yy\"\n              selectionMode=\"multiple\"\n              onChange={handleCalendarChange}\n            />\n            <div className=\"btn-wrapper\">\n              <button\n                type=\"button\"\n                className=\"btn btn--secondary\"\n                onClick={handleCloseCancel}\n              >\n                Отмена\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn--primary\"\n                onClick={handleClose}\n                disabled={isDisabled}\n              >\n                Обновить\n              </button>\n            </div>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState, useEffect } from 'react';\nimport { getData } from './api/api';\nimport { Users } from './components/Users';\nimport { Header } from './components/Header';\nimport { Navigation } from './components/Navigation';\nimport { Filter } from './components/Filter';\nimport { users } from './constants/data';\nimport { BASE_URL } from './constants/constants';\n\nimport './styles/reset.scss';\nimport './styles/utils/_mixins.scss';\nimport './styles/utils/_vars.scss';\nimport './styles/App.scss';\n\n\nexport const App: FC = () => {\n  const [usersFromServer, setUsersFromServer] = useState<User[]>(users);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('users');\n  const [visibleUsers, setVisibleUsers] = useState<User[]>(users);\n  const [isFiltered, setIsFiltered] = useState(false);\n\n\n  useEffect(() => {\n    getData<User[]>(BASE_URL)\n      .then(userList => {\n        setUsersFromServer(userList);\n      })\n      .catch(errorMass => setError(errorMass.toString()))\n      .finally(() => setIsLoading(false));\n  });\n\n  const setFilteredUsers = (field = 'По дате регистрации', start: Date, end: Date) => {\n    if (field === 'По дате регистрации') {\n      const userList = usersFromServer\n        .filter(user => new Date(user.signInDate) > start\n          && new Date(user.signInDate) < end);\n\n      setVisibleUsers(userList);\n      setIsFiltered(true);\n    } else {\n      const userList = usersFromServer\n        .filter(user => new Date(user.lastActivity) > start\n          && new Date(user.lastActivity) < end);\n\n      setVisibleUsers(userList);\n      setIsFiltered(true);\n    }\n  };\n\n  const deleteItem = (id: number) => {\n    setVisibleUsers(visibleUsers\n      .filter(user => user.userId !== id));\n  };\n\n  const setShowAmount = (value: number) => {\n    setVisibleUsers(usersFromServer\n      .filter((user, idx) => user && idx < value));\n  };\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <main className=\"main\">\n        <div className=\"container\">\n          <Filter\n            onFilter={\n              (field: string,\n                start: Date,\n                end: Date) => setFilteredUsers(field, start, end)\n            }\n          />\n          {isLoading && <p className=\"loader\">Данные загружаются...</p>}\n          {error\n            ? (\n              <p className=\"error\">\nOps!!!\n                {error}\n              </p>\n            )\n            : (\n              <Users\n                users={visibleUsers}\n                getShowAmount={setShowAmount}\n                isFiltered={isFiltered}\n                getUserId={deleteItem}\n              />\n            )}\n        </div>\n      </main>\n    </>\n  );\n};\n","export const BASE_URL = 'https://cursorksu.github.io/test-brighta-user-calendar/data.json';\n"],"sourceRoot":""}